<%
imgs = {}
Dir.chdir("#{Rails.root}/app/assets/images/") do
  imgs = Dir["**"].inject({}) {|h,f| h.merge! f => image_path(f)}
end
%>

window.image_path = (name) ->
  <%= imgs.to_json %>[name]

# window.image_path = (name) ->
#   r = <%= imgs.to_json %>[name]
#   r = "/static/assets/#{name}"
#   r

# http://stackoverflow.com/a/987376/554246
window.selectElementText = (element) ->
  if document.body.createTextRange
    range = document.body.createTextRange()
    range.moveToElementText(element)
    range.select()
  else if window.getSelection
    selection = window.getSelection()
    range = document.createRange()
    range.selectNodeContents(element)
    selection.removeAllRanges()
    selection.addRange(range)
  return

$.fn.animateHighlight = (highlightColor, duration) ->
  if (/MSIE\s([\d.]+)/.test(navigator.userAgent))
    version = new Number(RegExp.$1)
    if version <= 8
      @css("backgroundColor", highlightBg)
      return @
  highlightBg = highlightColor || "#FFFF9C"
  animateMs = duration || 1500
  originalBg = @css("backgroundColor")
  @stop()
    .css("background-color", highlightBg)
    .animate {backgroundColor: originalBg}, animateMs, => @css 'backgroundColor', ""

# h = (e) ->
#   $(e).css({'height':'auto','overflow-y':'hidden'}).height(e.scrollHeight)
# $('textarea.autoh').each () -> h(this)
# $('textarea.autoh').on 'input', () -> h(this)

window.toggleFullScreen = (obj, method) ->
  console.log method
  pfx = ["webkit", "moz", "ms", "o", ""]
  p = 0
  m = null
  t = null
  while p < pfx.length && !obj[m]
    m = method
    if pfx[p] == ""
      m = m.substr(0,1).toLowerCase() + m.substr(1)
    m = pfx[p] + m
    t = typeof obj[m]
    if t != "undefined"
      pfx = [pfx[p]]
      if (method == "RequestFullScreen")
        if t == "function"
          return obj[m](obj.ALLOW_KEYBOARD_INPUT)
        else
          return obj[m]
      else
        if t == "function"
          return obj[m]()
        else
          return obj[m]
    p += 1

# // Console-polyfill. MIT license.
# // https://github.com/paulmillr/console-polyfill
# // Make it safe to do console.log() always.
# (function(global) {
#   'use strict';
#   global.console = global.console || {};
#   var con = global.console;
#   var prop, method;
#   var empty = {};
#   var dummy = function() {};
#   var properties = 'memory'.split(',');
#   var methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' +
#      'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' +
#      'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');
#   while (prop = properties.pop()) if (!con[prop]) con[prop] = empty;
#   while (method = methods.pop()) if (!con[method]) con[method] = dummy;
# })(typeof window === 'undefined' ? this : window);
# // Using `this` for web workers while maintaining compatibility with browser
# // targeted script loaders such as Browserify or Webpack where the only way to
# // get to the global object is via `window`.
